<?xml version="1.0" encoding="UTF-8"?>
<project default="Export" basedir="." name="Temple-GoogleCode">

	<property name="flexdsk.path" value="C:\Program Files (x86)\Adobe\Adobe Flash Builder 4\sdks\4.0.0" />
	<property name="src.path" value="D:\Projects\Temple\GoogleCode\templelibrary\lib" />
	<property name="dst.path" value="../../bin" />
	<property name="root.path" value="../.." />
	<property name="version" value="2.8.6" />

	
	<target name="Export">
		<antcall target="Check copyrights" />
		<antcall target="Check license" />
		<antcall target="Check author" />
		<antcall target="Update Temple properties" />
		<antcall target="Delete old SWC" />
		<antcall target="Create SWC" />
		<antcall target="Generate ASDoc" />
		<antcall target="Create Zip" />
		<echo>Export successful</echo>
	</target>
	
	<target name="Delete old SWC" >
		<delete>
			<fileset dir="${dst.path}" includes="**/*.swc" />
		</delete>
		<echo>Old SWC deleted</echo>
	</target>

	<target name="Create SWC">
		<fdt.launch.library debug="false" projectname="Temple-GoogleCode" autoaddclasspath="false" target="${dst.path}/Temple_${version}.swc" compilerarguments="-include-sources ${src.path}" />
		<echo>SWC created</echo>
	</target>

	<!--target name="Create Greensock SWC">
		<fdt.launch.library debug="false" projectname="Temple-GoogleCode" autoaddclasspath="false" target="${src.path}/Greensock.swc" compilerarguments="-include-sources ${src.path}\..\external" />
	</target-->

	<target name="Generate ASDoc">
		<property name="asdoc.path" value="${flexdsk.path}/bin/asdoc.exe" />
		<exec executable="${asdoc.path}">
			<arg line="-source-path ../../lib" />
			<arg line="-doc-sources ../../lib/temple" />
			<arg line="-output ../../doc" />
			<arg line="-main-title 'Temple API Documentation - version ${version}'" />
			<arg line="-window-title 'Temple API Documentation'" />
			<arg line="-templates-path ../templates" />
			<arg line="-examples-path ../../examples" />
			<arg line="-footer 'by MediaMonks | http://www.mediamonks.com'" />
			<!--
			<arg line="-package temple 'Temple Flash Library'"/>
			<arg line="-package temple.core 'Temple extensions for most native Flash classes'"/>
			<arg line="-package temple.ui 'Temple User Interface classes'"/>
			<arg line="-package temple.debug 'Classes for debugging'"/>
			<arg line="-package temple.debug.errors 'Error classes of the Temple'"/>
			-->
		</exec>
		<echo>ASDoc generated</echo>

	</target>

	<target name="Create Zip">
		<zip destfile="${root.path}/templelibrary_${version}.zip">
			<zipfileset dir="${root.path}/bin" prefix="bin" />
			<zipfileset dir="${root.path}/doc" prefix="doc" />
			<zipfileset dir="${root.path}/examples" prefix="examples" />
			<zipfileset dir="${root.path}/lib" prefix="lib" />
		</zip>
		<echo>Zip file created</echo>
	</target>

	<target name="Update Temple properties">
		<!-- Version -->
		<replaceregexp file="${src.path}/temple/Temple.as" match='VERSION:String = "[0-9].[0-9].[0-9]"' replace='VERSION:String = "${version}"' flags="" byline="true" />

		<!-- Date -->
		<tstamp>
			<format property="date" pattern="yyyy-MM-dd" locale="nl" />
		</tstamp>
		<replaceregexp file="${src.path}/temple/Temple.as" match='DATE:String = "[0-9]{4}-[0-9]{2}-[0-9]{2}"' replace='DATE:String = "${date}"' flags="" byline="true" />
		<echo>Temple properties updated: version ${version}, date ${date}</echo>
	</target>

	<target name="Check copyrights">
		<fileset dir="${src.path}/temple" id="wrongfileset">
			<not>
				<containsregexp expression="2010 MediaMonks B.V." />
			</not>
		</fileset>
		<property name="wrongfiles" refid="wrongfileset" />
		<fail message="The following files does not contain copyrights: ${wrongfiles}">
			<condition>
				<not>
					<resourcecount count="0" refid="wrongfileset" />
				</not>
			</condition>
		</fail>
		<echo>Copyrights checked</echo>
	</target>

	<target name="Check license">
		<fileset dir="${src.path}/temple" id="wrongfileset">
			<not>
				<containsregexp expression="This license does not apply to 3rd party classes inside the Temple" />
			</not>
		</fileset>
		<property name="wrongfiles" refid="wrongfileset" />
		<fail message="The following files does not contain copyrights: ${wrongfiles}">
			<condition>
				<not>
					<resourcecount count="0" refid="wrongfileset" />
				</not>
			</condition>
		</fail>
		<echo>License checked</echo>
	</target>

	<target name="Check author">
		<fileset dir="${src.path}/temple" id="wrongfileset">
			<not>
				<containsregexp expression="@author" />
			</not>
		</fileset>
		<property name="wrongfiles" refid="wrongfileset" />
		<fail message="The following files does not contain an author: ${wrongfiles}">
			<condition>
				<not>
					<resourcecount count="0" refid="wrongfileset" />
				</not>
			</condition>
		</fail>
		<echo>Author checked</echo>
	</target>

</project>